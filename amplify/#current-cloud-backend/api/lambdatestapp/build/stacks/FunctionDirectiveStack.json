{
  "Description": "An auto-generated nested stack for the @function directive.",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref"
            },
            "NONE"
          ]
        }
      ]
    }
  },
  "Resources": {
    "QueryLambdaLambdaDataSourceServiceRole06A4F2AE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "QueryLambdaLambdaDataSourceServiceRoleDefaultPolicy306C37DB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::If": [
                  "HasEnvironmentParameter",
                  {
                    "Fn::Sub": [
                      "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:queryLambda-${env}",
                      {
                        "env": {
                          "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                        }
                      }
                    ]
                  },
                  {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:queryLambda"
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QueryLambdaLambdaDataSourceServiceRoleDefaultPolicy306C37DB",
        "Roles": [
          {
            "Ref": "QueryLambdaLambdaDataSourceServiceRole06A4F2AE"
          }
        ]
      }
    },
    "QueryLambdaLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "QueryLambdaLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:queryLambda-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:queryLambda"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "QueryLambdaLambdaDataSourceServiceRole06A4F2AE",
            "Arn"
          ]
        }
      }
    },
    "InvokeQueryLambdaLambdaDataSourceInvokeQueryLambdaLambdaDataSourceAppSyncFunctionBE9D0A52": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "QueryLambdaLambdaDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "InvokeQueryLambdaLambdaDataSource",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeQueryLambdaLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeQueryLambdaLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "QueryLambdaLambdaDataSource"
      ]
    },
    "QuerytestFuncResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "testFunc",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeQueryLambdaLambdaDataSourceInvokeQueryLambdaLambdaDataSourceAppSyncFunctionBE9D0A52",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"testFunc\"))\n{}\n## [End] Stash resolver specific context.. **",
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.testFunc.res.vtl"
            ]
          ]
        }
      }
    },
    "LoginDevLambdaDataSourceServiceRoleE5F44104": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "LoginDevLambdaDataSourceServiceRoleDefaultPolicy572AADE1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::If": [
                  "HasEnvironmentParameter",
                  {
                    "Fn::Sub": [
                      "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginDev-${env}",
                      {
                        "env": {
                          "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                        }
                      }
                    ]
                  },
                  {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginDev"
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LoginDevLambdaDataSourceServiceRoleDefaultPolicy572AADE1",
        "Roles": [
          {
            "Ref": "LoginDevLambdaDataSourceServiceRoleE5F44104"
          }
        ]
      }
    },
    "LoginDevLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "LoginDevLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginDev-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:loginDev"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "LoginDevLambdaDataSourceServiceRoleE5F44104",
            "Arn"
          ]
        }
      }
    },
    "InvokeLoginDevLambdaDataSourceInvokeLoginDevLambdaDataSourceAppSyncFunction37A1BB12": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "LoginDevLambdaDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "InvokeLoginDevLambdaDataSource",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeLoginDevLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeLoginDevLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "LoginDevLambdaDataSource"
      ]
    },
    "QueryloginTestResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "loginTest",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeLoginDevLambdaDataSourceInvokeLoginDevLambdaDataSourceAppSyncFunction37A1BB12",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"loginTest\"))\n{}\n## [End] Stash resolver specific context.. **",
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.loginTest.res.vtl"
            ]
          ]
        }
      }
    },
    "RefreshTokenCheckDevLambdaDataSourceServiceRoleA90A1687": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "RefreshTokenCheckDevLambdaDataSourceServiceRoleDefaultPolicyF4DDD15B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::If": [
                  "HasEnvironmentParameter",
                  {
                    "Fn::Sub": [
                      "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:refreshTokenCheckDev-${env}",
                      {
                        "env": {
                          "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                        }
                      }
                    ]
                  },
                  {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:refreshTokenCheckDev"
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RefreshTokenCheckDevLambdaDataSourceServiceRoleDefaultPolicyF4DDD15B",
        "Roles": [
          {
            "Ref": "RefreshTokenCheckDevLambdaDataSourceServiceRoleA90A1687"
          }
        ]
      }
    },
    "RefreshTokenCheckDevLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "RefreshTokenCheckDevLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:refreshTokenCheckDev-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:refreshTokenCheckDev"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "RefreshTokenCheckDevLambdaDataSourceServiceRoleA90A1687",
            "Arn"
          ]
        }
      }
    },
    "InvokeRefreshTokenCheckDevLambdaDataSourceInvokeRefreshTokenCheckDevLambdaDataSourceAppSyncFunctionF7A4B64F": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "RefreshTokenCheckDevLambdaDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "InvokeRefreshTokenCheckDevLambdaDataSource",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeRefreshTokenCheckDevLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokeRefreshTokenCheckDevLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "RefreshTokenCheckDevLambdaDataSource"
      ]
    },
    "QueryrefreshTestResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "refreshTest",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokeRefreshTokenCheckDevLambdaDataSourceInvokeRefreshTokenCheckDevLambdaDataSourceAppSyncFunctionF7A4B64F",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"refreshTest\"))\n{}\n## [End] Stash resolver specific context.. **",
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.refreshTest.res.vtl"
            ]
          ]
        }
      }
    },
    "PasswordResetDevLambdaDataSourceServiceRole4EAF7657": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "PasswordResetDevLambdaDataSourceServiceRoleDefaultPolicy88BA74D2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::If": [
                  "HasEnvironmentParameter",
                  {
                    "Fn::Sub": [
                      "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:passwordResetDev-${env}",
                      {
                        "env": {
                          "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                        }
                      }
                    ]
                  },
                  {
                    "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:passwordResetDev"
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PasswordResetDevLambdaDataSourceServiceRoleDefaultPolicy88BA74D2",
        "Roles": [
          {
            "Ref": "PasswordResetDevLambdaDataSourceServiceRole4EAF7657"
          }
        ]
      }
    },
    "PasswordResetDevLambdaDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "Name": "PasswordResetDevLambdaDataSource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Sub": [
                  "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:passwordResetDev-${env}",
                  {
                    "env": {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  }
                ]
              },
              {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:passwordResetDev"
              }
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "PasswordResetDevLambdaDataSourceServiceRole4EAF7657",
            "Arn"
          ]
        }
      }
    },
    "InvokePasswordResetDevLambdaDataSourceInvokePasswordResetDevLambdaDataSourceAppSyncFunctionA740996E": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PasswordResetDevLambdaDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "InvokePasswordResetDevLambdaDataSource",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokePasswordResetDevLambdaDataSource.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/InvokePasswordResetDevLambdaDataSource.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PasswordResetDevLambdaDataSource"
      ]
    },
    "QuerypasswordResetTestResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "passwordResetTest",
        "TypeName": "Query",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "InvokePasswordResetDevLambdaDataSourceInvokePasswordResetDevLambdaDataSourceAppSyncFunctionA740996E",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"passwordResetTest\"))\n{}\n## [End] Stash resolver specific context.. **",
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.passwordResetTest.res.vtl"
            ]
          ]
        }
      }
    }
  },
  "Parameters": {
    "referencetotransformerrootstackenv10C5A902Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
      "Type": "String"
    }
  }
}